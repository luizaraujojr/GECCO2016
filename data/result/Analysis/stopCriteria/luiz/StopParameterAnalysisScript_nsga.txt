	##################################################
	##### Defining the Evaluation Stop Parameter #####
	##################################################

## change the file replacing the character # for the character i
## remove the repetitive title of result analysis

# Load data
data <- read.table(file="C:/workspace/Hector/data/result/Analysis/stopCriteria/data_nsga.txt", header=TRUE);

# Separate sequence config and instances
unique_configuration <- unique(as.character(data$config));
unique_instances <- unique(data$inst);

# Create matrices to hold values
#mean_time <- matrix(nrow=length(unique_instances), ncol=length(unique_configuration), dimnames=list(unique_instances, unique_configuration));
mean_solution <- matrix(nrow=length(unique_instances), ncol=length(unique_configuration), dimnames=list(unique_instances, unique_configuration));
mean_hv <- matrix(nrow=length(unique_instances), ncol=length(unique_configuration), dimnames=list(unique_instances, unique_configuration));
mean_gd <- matrix(nrow=length(unique_instances), ncol=length(unique_configuration), dimnames=list(unique_instances, unique_configuration));

#sd_time <- matrix(nrow=length(unique_instances), ncol=length(unique_configuration), dimnames=list(unique_instances, unique_configuration));
sd_solution <- matrix(nrow=length(unique_instances), ncol=length(unique_configuration), dimnames=list(unique_instances, unique_configuration));
sd_hv <- matrix(nrow=length(unique_instances), ncol=length(unique_configuration), dimnames=list(unique_instances, unique_configuration));
sd_gd <- matrix(nrow=length(unique_instances), ncol=length(unique_configuration), dimnames=list(unique_instances, unique_configuration));

# Fill out matrices with means and standard deviation for a initial analysis
for (config_ in unique_configuration )
{
	for (instances_ in unique_instances)
	{
		newdata <- subset(data, inst == instances_ & config == config_);
		mean_solution [instances_, config_] <- mean(newdata$best);
		mean_hv [instances_, config_] <- mean(newdata$hv);
		#mean_time [instances_, config_] <- mean(newdata$time);
		mean_gd [instances_, config_] <- mean(newdata$gd);
		
		sd_solution [instances_, config_] <- sd(newdata$best);
		sd_hv [instances_, config_] <- sd(newdata$hv);
		#sd_time [instances_, config_] <- sd(newdata$time);
		sd_gd [instances_, config_] <- sd(newdata$gd);
	}
}

mean_hv;
mean_solution;
mean_gd;

sd_hv;
sd_solution;
sd_gd;

# Checking the existence of differences between the configurations
kruskal.test(data$gd ~ data$config);
kruskal.test(data$hv ~ data$config);
kruskal.test(data$best ~ data$config);

pairwise.wilcox.test(data$gd, data$config, p.adj="bonferroni", exact=F);
pairwise.wilcox.test(data$hv, data$config, p.adj="bonferroni", exact=F);
pairwise.wilcox.test(data$best, data$config, p.adj="bonferroni", exact=F);

# Calculate statistics effect size and wilcox text
	# Calculating the Effect Size of Varga & Delaney (A12)
	varga.delaney <- function(r1, r2) {
		m <- length(r1);
		n <- length(r2);
		return ((sum(rank(c(r1, r2))[seq_along(r1)]) / m - (m + 1) / 2) / n);
	}

	HVStatisticAnalysis <- matrix(nrow=length(unique_instances), ncol=6, dimnames=list(unique_instances, c("HV_es_50-20", "HV_es_50-10", "HV_es_50-5", "HV_pv_50-20", "HV_pv_50-10", "HV_pv_50-5")));
	GDStatisticAnalysis <- matrix(nrow=length(unique_instances), ncol=6, dimnames=list(unique_instances, c("gd_es_50-20", "gd_es_50-10", "gd_es_50-5", "gd_pv_50-20", "gd_pv_50-10", "gd_pv_50-5")));
	BESTStatisticAnalysis <- matrix(nrow=length(unique_instances), ncol=6, dimnames=list(unique_instances, c("best_es_50-20", "best_es_50-10", "best_es_50-5", "best_pv_50-20", "best_pv_50-10", "best_pv_50-5")));

	for (instancia_ in unique_instances)
	{	
		nsga5k <- subset(data, inst == instancia_ & config == 'nsga5k2x');	
		nsga10k <- subset(data, inst == instancia_ & config == 'nsga10k2x');
		nsga20k <- subset(data, inst == instancia_ & config == 'nsga20k2x');
		nsga50k <- subset(data, inst == instancia_ & config == 'nsga50k2x');
	
		HVStatisticAnalysis[instancia_, 'HV_es_50-20'] <- varga.delaney (nsga50k$hv,nsga20k$hv);
		HVStatisticAnalysis[instancia_, 'HV_es_50-10'] <- varga.delaney (nsga50k$hv,nsga10k$hv);
		HVStatisticAnalysis[instancia_, 'HV_es_50-5'] <- varga.delaney (nsga50k$hv,nsga5k$hv);
		
		HVStatisticAnalysis[instancia_, 'HV_pv_50-20'] <- wilcox.test(nsga50k$hv,nsga20k$hv)$p.value;
		HVStatisticAnalysis[instancia_, 'HV_pv_50-10'] <- wilcox.test(nsga50k$hv,nsga20k$hv)$p.value;
		HVStatisticAnalysis[instancia_, 'HV_pv_50-5'] <- wilcox.test(nsga50k$hv,nsga20k$hv)$p.value;
		
		GDStatisticAnalysis[instancia_, 'gd_es_50-20'] <- varga.delaney (nsga50k$gd,nsga20k$gd);
		GDStatisticAnalysis[instancia_, 'gd_es_50-10'] <- varga.delaney (nsga50k$gd,nsga10k$gd);
		GDStatisticAnalysis[instancia_, 'gd_es_50-5'] <- varga.delaney (nsga50k$gd,nsga5k$gd);
		
		GDStatisticAnalysis[instancia_, 'gd_pv_50-20'] <- wilcox.test(nsga50k$gd,nsga20k$gd)$p.value;
		GDStatisticAnalysis[instancia_, 'gd_pv_50-10'] <- wilcox.test(nsga50k$gd,nsga20k$gd)$p.value;
		GDStatisticAnalysis[instancia_, 'gd_pv_50-5'] <- wilcox.test(nsga50k$gd,nsga20k$gd)$p.value;
		
		BESTStatisticAnalysis[instancia_, 'best_es_50-20'] <- varga.delaney (nsga50k$best,nsga20k$best);
		BESTStatisticAnalysis[instancia_, 'best_es_50-10'] <- varga.delaney (nsga50k$best,nsga10k$best);
		BESTStatisticAnalysis[instancia_, 'best_es_50-5'] <- varga.delaney (nsga50k$best,nsga5k$best);
		
		BESTStatisticAnalysis[instancia_, 'best_pv_50-20'] <- wilcox.test(nsga50k$best,nsga20k$best)$p.value;
		BESTStatisticAnalysis[instancia_, 'best_pv_50-10'] <- wilcox.test(nsga50k$best,nsga20k$best)$p.value;
		BESTStatisticAnalysis[instancia_, 'best_pv_50-5'] <- wilcox.test(nsga50k$best,nsga20k$best)$p.value;
	}

	HVStatisticAnalysis
	GDStatisticAnalysis
	BESTStatisticAnalysis


